

import createClient, { Middleware } from "openapi-fetch";
import type { paths } from "../openapi/types.ts"; // generated by openapi-typescript
import config from "./config.ts";


const myMiddleware: Middleware = {
  async onRequest({ request }) {
    // set authorization header
    const token = localStorage.getItem("token");
    if (token) {
      request.headers.set("Authorization", `Bearer ${token}`);
    } else {
      request.headers.delete("Authorization");
    }
    return request;
  },
  async onResponse({ response }) {
    if (response.status >= 400) {
      const body = response.headers.get("content-type")?.includes("json")
        ? await response.clone().json()
        : await response.clone().text();
      throw new Error(body);
    }
    return undefined;
  },
};

const client = createClient<paths>({ baseUrl: config.dataProviderUrl });

client.use(myMiddleware);

export const dataProvider = client